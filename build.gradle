import groovy.json.JsonSlurper

buildscript {
    repositories {
        maven { url 'https://maven.minecraftforge.net' }
        maven {url 'https://plugins.gradle.org/m2/'}
        mavenCentral()
        maven {url 'https://repo.spongepowered.org/repository/maven-public/'}
        maven { url 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath "org.jetbrains.gradle.plugin.idea-ext:org.jetbrains.gradle.plugin.idea-ext.gradle.plugin:1.1.1"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.jetbrains.gradle.plugin.idea-ext'
apply plugin: 'org.spongepowered.mixin'

version = version_ig
group = 'igteam.immersive_geology'
archivesBaseName = 'immersive_geology'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
jar.enabled = false

sourceSets {
    api {
        compileClasspath = main.compileClasspath
    }
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources",
            ]
        }
        compileClasspath += api.output
        runtimeClasspath += api.output
    }
    datagen {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
    gametest {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
    test {
        compileClasspath += api.output
        runtimeClasspath += api.output
    }
}

def version_replaces = [
        'version'      : project.version,
        'mc_version'   : version_minecraft,
        'forge_version': version_forge,
        'jei_version'  : version_jei,
        'ie_version': ie_version_range
]

processResources {
    duplicatesStrategy = DuplicatesStrategy.FAIL
    inputs.properties(version_replaces)
    filesMatching("META-INF/mods.toml") {
        expand version_replaces
    }
    exclude ".cache"
}

task copyModsTomlForIntelliJ(type: Copy) {
    from processResources.destinationDir
    into "$projectDir/out/production/resources"
    include "META-INF/mods.toml"
}

copyModsTomlForIntelliJ.dependsOn processResources
afterEvaluate {
    // prepareRuns doesn't exist before afterEvaluate
    prepareRuns.dependsOn copyModsTomlForIntelliJ
}

minecraft {
    mappings channel: 'parchment', version: version_parchment

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN'
            property 'forge.enabledGameTestNamespaces', 'immersive_geology'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            ideaModule project.name + ".gametest"
            mods {
                immersive_geology {
                    source sourceSets.main
                    source sourceSets.api
                    source sourceSets.gametest
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'immersive_geology'

            // Disable GUI by default, the IDE console can be used to enter commands
            arg '-nogui'

            mods {
                immersive_geology {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }
        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', ''

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'

            args '--mod', 'immersive_geology', '--all', '--output', file('src/generated/resources/'), '--validate',
                    '--existing', sourceSets.main.resources.srcDirs[0]
            ideaModule project.name+".datagen"

            mods {
                immersive_geology {
                    source sourceSets.main
                    source sourceSets.datagen
                    source sourceSets.api
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''

            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'immersive_geology'

            ideaModule project.name + ".gametest"

            mods {
                immersive_geology {
                    source sourceSets.main
                    source sourceSets.gametest
                    source sourceSets.api
                }
            }
        }
    }
}

repositories {
    maven { // TOP (The one probe)
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // JEI & Tinkers
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven { // BlockModelSplitter
        name 'Jared maven'
        url 'https://maven.blamejared.com/'
    }
    maven {//Curse maven, in case some other maven goes offline and for mods that don't have a maven
        url "https://cfa2.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { // CC-Tweaked
        url 'https://squiddev.cc/maven/'
        content {
            includeGroup 'org.squiddev'
        }
    }
    maven { //Curious
        url "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${version_minecraft}-${version_forge}"

    compileOnly  fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_minecraft}-${version_ie}:api")
    runtimeOnly  fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_minecraft}-${version_ie}")

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${version_jei}:api")
    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:9.1.137")
    compileOnly fg.deobf("org.squiddev:cc-tweaked-${version_minecraft}:${version_cctweaked}")
    compileOnly fg.deobf("curse.maven:the-one-probe-245211:3550084")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18-5.0.2.4:api")
    compileOnly fg.deobf("curse.maven:jade-324717:3551337")
    compileOnly fg.deobf("curse.maven:opencomputers2-437654:3739469")

    testImplementation('junit:junit:4.13.2')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

